services:

  app:
    image: ghcr.io/iprody/iprody-devs-gr0000000011-product-service/product-service:latest
    restart: unless-stopped
    container_name: product-service-app
    environment:
      HOST: jdbc:postgresql://db:5432/postgres
      DATASOURCE_DRIVER: org.postgresql.Driver
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "--quiet" ]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 5s

  liquibase:
    image: liquibase/liquibase:latest
    container_name: liquibase
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../liquibase/changelog:/liquibase/changelog
    command: >
      sh -c '
      liquibase
      --url=jdbc:postgresql://db:5432/postgres
      --changelog-file=./changelog/db.changelog-master.yaml
      --username=postgres
      --password=postgres
      update &&
      liquibase
      --url=jdbc:postgresql://db:5432/postgres
      --changelog-file=./changelog/db.changelog-master.yaml
      --username=postgres
      --password=postgres
      update --contexts=test
      '

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    depends_on:
      - app
    restart: always
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=grafana
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://influxdb:8086/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  k6:
    image: grafana/k6:latest
    container_name: k6
    depends_on:
      influxdb:
        condition: service_healthy
    volumes:
      - ../performance-testing/k6-scripts:/scripts
    entrypoint: [ "sh", "-c", "k6 run --out influxdb=http://influxdb:8086/grafana /scripts/performance-testing.js" ]
